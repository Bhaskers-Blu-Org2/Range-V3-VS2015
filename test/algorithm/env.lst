SOURCE="adjacent_find.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# adjacent_find
SOURCE="all_of.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# all_of
SOURCE="any_of.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# any_of
SOURCE="binary_search.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# binary_search
SOURCE="copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# copy
SOURCE="copy_backward.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# copy_backward
SOURCE="count.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# count
SOURCE="count_if.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# count_if
SOURCE="equal.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# equal
SOURCE="equal_range.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# equal_range
SOURCE="fill.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# fill
SOURCE="find.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# find
SOURCE="find_end.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# find_end
SOURCE="find_first_of.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# find_first_of
SOURCE="find_if.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# find_if
SOURCE="for_each.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# for_each
SOURCE="generate.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# generate
SOURCE="generate_n.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# generate_n
SOURCE="includes.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# includes
SOURCE="inplace_merge.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# inplace_merge
SOURCE="is_heap1.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap1
SOURCE="is_heap2.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap2
SOURCE="is_heap3.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap3
SOURCE="is_heap4.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap4
SOURCE="is_heap_until1.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap_until1
SOURCE="is_heap_until2.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap_until2
SOURCE="is_heap_until3.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap_until3
SOURCE="is_heap_until4.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_heap_until4
SOURCE="is_partitioned.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_partitioned
SOURCE="is_permutation.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_permutation
SOURCE="is_sorted.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_sorted
SOURCE="is_sorted_until.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# is_sorted_until
SOURCE="lexicographical_compare.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# lexicographical_compare
SOURCE="lower_bound.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# lower_bound
SOURCE="make_heap.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# make_heap
SOURCE="max_element.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# max_element
SOURCE="merge.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# merge
SOURCE="minmax_element.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# minmax_element
SOURCE="min_element.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# min_element
SOURCE="mismatch.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# mismatch
SOURCE="move.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# move
SOURCE="move_backward.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# move_backward
SOURCE="next_permutation.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# next_permutation
SOURCE="none_of.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# none_of
SOURCE="nth_element.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# nth_element
SOURCE="partial_sort.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# partial_sort
SOURCE="partial_sort_copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# partial_sort_copy
SOURCE="partition.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# partition
SOURCE="partition_copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# partition_copy
SOURCE="partition_point.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# partition_point
SOURCE="pop_heap.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# pop_heap
SOURCE="prev_permutation.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# prev_permutation
SOURCE="push_heap.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# push_heap
SOURCE="random_shuffle.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# random_shuffle
SOURCE="remove.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# remove
SOURCE="remove_copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# remove_copy
SOURCE="remove_copy_if.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# remove_copy_if
SOURCE="remove_if.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# remove_if
SOURCE="replace.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# replace
SOURCE="replace_copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# replace_copy
SOURCE="replace_copy_if.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# replace_copy_if
SOURCE="replace_if.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# replace_if
SOURCE="reverse.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# reverse
SOURCE="reverse_copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# reverse_copy
SOURCE="rotate.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# rotate
SOURCE="rotate_copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# rotate_copy
SOURCE="search.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# search
SOURCE="search_n.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# search_n
SOURCE="set_difference1.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_difference1
SOURCE="set_difference2.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_difference2
SOURCE="set_difference3.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_difference3
SOURCE="set_difference4.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_difference4
SOURCE="set_difference5.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_difference5
SOURCE="set_difference6.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_difference6
SOURCE="set_intersection1.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_intersection1
SOURCE="set_intersection2.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_intersection2
SOURCE="set_intersection3.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_intersection3
SOURCE="set_intersection4.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_intersection4
SOURCE="set_intersection5.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_intersection5
SOURCE="set_intersection6.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_intersection6
SOURCE="set_symmetric_difference1.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_symmetric_difference1
SOURCE="set_symmetric_difference2.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_symmetric_difference2
SOURCE="set_symmetric_difference3.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_symmetric_difference3
SOURCE="set_symmetric_difference4.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_symmetric_difference4
SOURCE="set_symmetric_difference5.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_symmetric_difference5
SOURCE="set_symmetric_difference6.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_symmetric_difference6
SOURCE="set_union1.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_union1
SOURCE="set_union2.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_union2
SOURCE="set_union3.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_union3
SOURCE="set_union4.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_union4
SOURCE="set_union5.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_union5
SOURCE="set_union6.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# set_union6
SOURCE="shuffle.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# shuffle
SOURCE="sort.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# sort
SOURCE="sort_heap.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# sort_heap
SOURCE="stable_partition.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# stable_partition
SOURCE="stable_sort.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# stable_sort
SOURCE="swap_ranges.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# swap_ranges
SOURCE="transform.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# transform
SOURCE="unique.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# unique
SOURCE="unique_copy.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# unique_copy
SOURCE="upper_bound.cpp" CFLAGS="/EHsc /I..\\..\\include /wd4503"	# upper_bound
RUNALL_CROSSLIST
CFLAGS="/DWORKAROUND_PERMISSIVE" # permissive+
CFLAGS="/d1permissive-"          # permissive-
